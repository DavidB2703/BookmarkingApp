@model ApplicationUser

@* <h1>Aici ar trb sa apara bookmark-urile salvate pentru userul @Model.Email</h1> *@

@{
    ViewData["Title"] = "Saved";
}
<h1 class="d-flex flex-row align-items-center justify-content-between mb-4">
    Saved Categories
    <a class="btn-primary btn" asp-controller="Categories" asp-action="New">
        Add Category
        <i class="bi bi-plus"></i>
    </a>
</h1>
@foreach (var category in Model.Categories) {
    <h1 class="d-flex flex-row gap-3 align-items-center">
        @category.CategoryName
        <div class="d-flex flex-row gap-1 align-items-center">
            <a href="/Categories/Edit/@category.Id" class="btn btn-secondary">
                <i class="bi bi-pencil-square"></i>
            </a>
            <form class="d-inline-flex align-items-center" action="/Categories/Delete/@category.Id" method="post">
                <button type="submit" class="btn btn-danger">
                    <i class="bi bi-trash3-fill"></i>
                </button>
            </form>
        </div>
    </h1>
    <div class="bookmark-container-@category.Id">
        @foreach (var bookmark in category.Bookmarks) {
            @Html.Partial("_BookmarkCard", new BookmarkViewModel {
                Bookmark = bookmark,
                InCategory = category
            })
        }
    </div>
}

@section Scripts {
    <script>
        $(() => {
        const ids = @Json.Serialize(Model.Categories.Select(c => c.Id));
        ids.forEach(id => {
            const container = document.querySelector(`.bookmark-container-${id}`);
            const msnry = new Masonry(container, {
                // options
                itemSelector: '.bookmark',
            });
            // console.log(container, msnry);
        });
        });
    </script>
}